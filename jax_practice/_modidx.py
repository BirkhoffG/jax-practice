# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/jax-practice',
                'doc_host': 'https://birkhoffg.github.io',
                'git_url': 'https://github.com/birkhoffg/jax-practice',
                'lib_path': 'jax_practice'},
  'syms': { 'jax_practice.data_preprocessor': { 'jax_practice.data_preprocessor.DataPreprocessor': ( 'data_preprocessor.html#datapreprocessor',
                                                                                                     'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.DataPreprocessor.fit': ( 'data_preprocessor.html#datapreprocessor.fit',
                                                                                                         'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.DataPreprocessor.fit_transform': ( 'data_preprocessor.html#datapreprocessor.fit_transform',
                                                                                                                   'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.DataPreprocessor.inverse_transform': ( 'data_preprocessor.html#datapreprocessor.inverse_transform',
                                                                                                                       'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.DataPreprocessor.transform': ( 'data_preprocessor.html#datapreprocessor.transform',
                                                                                                               'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.Feature': ( 'data_preprocessor.html#feature',
                                                                                            'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.Feature.__init__': ( 'data_preprocessor.html#feature.__init__',
                                                                                                     'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.Feature.inverse_transform': ( 'data_preprocessor.html#feature.inverse_transform',
                                                                                                              'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.Feature.transform': ( 'data_preprocessor.html#feature.transform',
                                                                                                      'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.FeaturesList': ( 'data_preprocessor.html#featureslist',
                                                                                                 'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.FeaturesList.__init__': ( 'data_preprocessor.html#featureslist.__init__',
                                                                                                          'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.FeaturesList.inverse_transform': ( 'data_preprocessor.html#featureslist.inverse_transform',
                                                                                                                   'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.FeaturesList.transform': ( 'data_preprocessor.html#featureslist.transform',
                                                                                                           'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.MinMaxScaler': ( 'data_preprocessor.html#minmaxscaler',
                                                                                                 'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.MinMaxScaler.fit': ( 'data_preprocessor.html#minmaxscaler.fit',
                                                                                                     'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.MinMaxScaler.inverse_transform': ( 'data_preprocessor.html#minmaxscaler.inverse_transform',
                                                                                                                   'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.MinMaxScaler.transform': ( 'data_preprocessor.html#minmaxscaler.transform',
                                                                                                           'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.OneHotEncoder': ( 'data_preprocessor.html#onehotencoder',
                                                                                                  'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.OneHotEncoder.fit': ( 'data_preprocessor.html#onehotencoder.fit',
                                                                                                      'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.OneHotEncoder.inverse_transform': ( 'data_preprocessor.html#onehotencoder.inverse_transform',
                                                                                                                    'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor.OneHotEncoder.transform': ( 'data_preprocessor.html#onehotencoder.transform',
                                                                                                            'jax_practice/data_preprocessor.py'),
                                                'jax_practice.data_preprocessor._check_xs': ( 'data_preprocessor.html#_check_xs',
                                                                                              'jax_practice/data_preprocessor.py')}}}
